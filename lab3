import random

def generate_matrix(n):
    return [[random.randint(-10, 10) for _ in range(n)] for _ in range(n)]

def modify_matrix(F, n):
    zeros = sum(F[0]) + sum(F[-1]) + sum(row[0] + row[-1] for row in F) - F[0][0] - F[0][-1] - F[-1][0] - F[-1][-1]
    product = 1
    for x in F[0] + F[-1]:
        if x != 0:
            product *= x
    for i in range(n//2):
        for j in range(n//2 if zeros > product else n//2, n):
            F[i][j], F[n//2+i][j] = F[n//2+i][j], F[i][j]
    return F

def process_matrix(k, n):
    A = generate_matrix(n)
    F = modify_matrix([row[:] for row in A], n)
    A_T = list(map(list, zip(*A)))
    F_plus_A = [[F[i][j] + A[i][j] for j in range(n)] for i in range(n)]
    result = [[k * sum(A_T[i][k] * F_plus_A[k][j] for k in range(n)) for j in range(n)] for i in range(n)]

    print(f"K: {k}, N: {n}\nИсходная матрица A:")
    for row in A:
        print(row)
    print("Модифицированная матрица F:")
    for row in F:
        print(row)
    print("Результат вычислений:")
    for row in result:
        print(row)

k, n = map(int, input("Введите K и N: ").split())
process_matrix(k, n)
